import unittest
from TestUtils import TestLexer
class LexerSuite(unittest.TestCase):
    def test_lowercase_identifier(self):
        """test identifiers"""
        self.assertTrue(TestLexer.test("randotesto\t\f", "randotesto,<EOF>", 101))
        self.assertTrue(TestLexer.test("12312.ee3332szxd3!", "12312.,ee3332szxd3,!,<EOF>", 102))
        self.assertTrue(TestLexer.test(""" "He asked me: \\"Where is John?\\"" """, """He asked me: \\"Where is John?\\",<EOF>""", 103))
        self.assertTrue(TestLexer.test("9983e-3232", "9983e-3232,<EOF>", 104))
        self.assertTrue(TestLexer.test("{sdsadee}", "{,sdsadee,},<EOF>", 105))
        self.assertTrue(TestLexer.test("truefalse false,true}true", "truefalse,false,,,true,},true,<EOF>", 106))
        self.assertTrue(TestLexer.test("a121_232ss 1122_33.4343 _232", "a121_232ss,112233.4343,_232,<EOF>", 107))
        self.assertTrue(TestLexer.test("9abc a9bc", "9,abc,a9bc,<EOF>", 108))
        self.assertTrue(TestLexer.test("\t\b\n\f", "<EOF>", 109))
        self.assertTrue(TestLexer.test("4aaaaxxx__33//randomcomment", "4,aaaaxxx__33,<EOF>", 110))
        self.assertTrue(TestLexer.test("ooppxxew/*randomcomment*/122311123", "ooppxxew,122311123,<EOF>", 111))
        self.assertTrue(TestLexer.test(""" "aasdasdxx""", "Unclosed String: aasdasdxx", 112))
        self.assertTrue(TestLexer.test(""" "aasdasdxx\\nsds" """, "aasdasdxx\\nsds,<EOF>", 113))
        self.assertTrue(TestLexer.test("ab?cd", "ab,Error Token ?", 114))
        self.assertTrue(TestLexer.test("a : integer = ?", "a,:,integer,=,Error Token ?", 115))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 116))
        self.assertTrue(TestLexer.test(""" "abc\\n\\t\\f123231" """, """abc\\n\\t\\f123231,<EOF>""", 117))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 118))
        self.assertTrue(TestLexer.test("{+}--**/", "{,+,},-,-,*,*,/,<EOF>", 119))
        self.assertTrue(TestLexer.test(""" "abc""yydmmmc""", """abc,Unclosed String: yydmmmc""", 120))
        self.assertTrue(TestLexer.test(""" "abc""123" """, """abc,123,<EOF>""", 121))
        self.assertTrue(TestLexer.test(""" "abc""123\\o" """, """abc,Illegal Escape In String: 123\o""", 122))
        self.assertTrue(TestLexer.test("123333'sssd", "123333,Error Token '", 123))
        self.assertTrue(TestLexer.test("aas //sadwwweaxx\nasdaseeexx", "aas,asdaseeexx,<EOF>", 124))
        self.assertTrue(TestLexer.test("aas //sadwwweaxx\tasdaseeexx", "aas,<EOF>", 125))
        self.assertTrue(TestLexer.test("""aase"abc"99ss31.122dee3""", """aase,abc,99,ss31,.,122,dee3,<EOF>""", 126))
        self.assertTrue(TestLexer.test("""1.222e33asdseex 9_232aax""", """1.222e33,asdseex,9232,aax,<EOF>""", 127))
        self.assertTrue(TestLexer.test(""" "abc\\t\\f\\n"::12232 """, """abc\\t\\f\\n,::,12232,<EOF>""", 128))
        self.assertTrue(TestLexer.test(""" "\\labc\\t\\f\\g" """, """Illegal Escape In String: \l""", 129))
        self.assertTrue(TestLexer.test(""" "\\rabc"\t\f\n """, """\\rabc,<EOF>""", 130))
        self.assertTrue(TestLexer.test(""" "\\rabc""\\t\\f\\n """, """\\rabc,Unclosed String: \\t\\f\\n """, 131))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 132))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 133))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 134))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 135))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 136))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 137))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 138))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 139))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 140))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 141))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 142))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 143))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 144))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 145))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 146))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 147))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 148))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 149))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 150))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 151))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 152))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 153))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 154))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 155))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 156))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 157))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 158))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 159))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 160))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 161))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 162))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 163))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 164))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 165))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 166))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 167))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 168))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 169))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 170))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 171))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 172))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 173))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 174))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 175))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 176))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 177))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 178))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 179))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 180))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 181))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 182))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 183))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 184))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 185))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 186))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 187))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 188))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 189))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 190))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 191))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 192))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 193))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 194))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 195))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 196))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 197))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 198))
        self.assertTrue(TestLexer.test(""" "abc\\"" """, """abc\\",<EOF>""", 199))
        self.assertTrue(TestLexer.test("1_234.567", "1234.567,<EOF>", 200))